buildscript {
    repositories {
        mavenCentral()
	jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.1.7.RELEASE")
        classpath("se.transmode.gradle:gradle-docker:1.2")
    }
}

apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: 'docker'

group = 'hms'

jar {
    baseName = 'personmgr'
    version = '0.0.1-SNAPSHOT'
}


description = """personmgr"""

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
        
     maven { url "http://maven.intr" }
     maven { url "http://repo.maven.apache.org/maven2" }
    maven { url "http://repo.spring.io/libs-release" }
}
dependencies {
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-mongodb', version:'1.4.0.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-amqp', version:'1.4.0.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis', version:'1.4.0.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-rest', version:'1.4.0.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version:'1.4.0.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web-services', version:'1.4.0.RELEASE'
    compile group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version:'1.9.13'
    compile group: 'org.codehaus.jackson', name: 'jackson-core-asl', version:'1.9.13'
//    compile group: 'org.springframework.data', name: 'spring-data-redis', version:'1.7.2.RELEASE'
    compile group: 'ru.majordomo.hms.common', name: 'hms-common', version:'0.0.1-SNAPSHOT'
    testCompile(group: 'org.springframework.boot', name: 'spring-boot-starter-test', version:'1.4.0.RELEASE') {
exclude(module: 'commons-logging')
    }
}


task buildDocker(type: Docker, dependsOn: build) {
    def dockerDir = "docker"
    push = false
    project.group = "docker-registry.intr/"+project.group
    applicationName = jar.baseName
    dockerfile = file("${buildDir}/Dockerfile")
    doFirst {
        copy {
            from "${dockerDir}/Dockerfile"
            into buildDir
            expand(jarBuildName:jar.getArchiveName(),projectName:project.name)
        }
        copy {
            from jar
            into stageDir
        }
    }
}

